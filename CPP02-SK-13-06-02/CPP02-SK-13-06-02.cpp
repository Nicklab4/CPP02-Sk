// Задача 2. Цены и продукты

// С помощью списка инициализации задаётся вектор цен на продукты (дробными числами).
// Таким же образом с помощью списка инициализации задаётся вектор покупок (в виде
// индексов), которые совершает человек. Необходимо вывести на экран итоговую стоимость
// покупок. Вектор цен и вектор покупок можно задать напрямую в коде.

// Пример выполнения
// // Вектор цен выглядит так: {2.5, 4.25, 3.0, 10.0}.
// std::vector<float> prices {2.5, 4.25, 3.0, 10.0};

// // Вектор покупок: {1, 1, 0, 3}, то есть два товара по индексу 1 и по одному —
// // индексов 0 и 3.
// std::vector<int> items {1, 1, 0, 3};

// Суммарная стоимость будет равна 21.0.

// Советы и рекомендации
// При получении итоговой стоимости покупок не нужно делать циклы по обоим векторам,
// достаточно одного цикла.

// Что оценивается
// Программа не допускает выхода за границы вектора цен.

#include <iostream>
#include <vector>

int main()
{
    float sum = 0;
    float cost;
    int n;

    // Вектор цен
    // std::vector<float> prices{2.5, 4.25, 3.0, 10.0};
    std::vector<float> prices;

    std::cout << "Введите цены на товары (-1 завершение ввода): ";
    while (true)
    {
        std::cin >> cost;
        if (cost == -1)
            break;
        if (cost <= 0)
            std::cout << "Ошибка! Цена на товар не должна быть равной нулю или быть меньше ноля.";
        else
            prices.push_back(cost);
    }

    // Вектор покупок
    // std::vector<int> items{1, 1, 0, 3};
    std::vector<int> items;

    std::cout << "Введите номера товаров (-1 завершение ввода): ";
    while (true)
    {
        std::cin >> n;
        if (n == -1)
            break;
        if (n < 0 || n >= prices.size())
            std::cout << "Ошибка! Номер товара не может быть меньше ноля или больше "
            << prices.size() - 1 << "\n";
        else
            items.push_back(n);
    }

    for (int i = 0; i < items.size(); i++)
    {
        sum += prices[items[i]];
    }

    std::cout << "Суммарная стоимость покупок будет равна: " << sum << "\n";
}